// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace HomeBrokerMBCorpUnitTest.UIMap1Classes
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class UIMap1
    {
        
        /// <summary>
        /// GravacaoDaTela - Use 'GravacaoDaTelaParams' to pass parameters into this method.
        /// </summary>
        public void GravacaoDaTela()
        {
            #region Variable Declarations
            WinButton uINovaabaButton = this.UISmellstoRefactoringsWindow.UIAbasdonavegadorToolBar.UINovaabaButton;
            WinComboBox uIItemComboBox = this.UISmellstoRefactoringsWindow.UIBarradenavegaçãoToolBar.UIItemComboBox;
            WinEdit uIPesquisarouabrirendeEdit = this.UISmellstoRefactoringsWindow.UIItemComboBox.UIPesquisarouabrirendeEdit;
            WpfCheckBox uICheckBoxCheckBox = this.UIMainWindowWindow.UICheckBoxCheckBox;
            WinTitleBar uIMainWindowTitleBar = this.UIMainWindowWindow1.UIMainWindowTitleBar;
            WpfButton uIButtonButton = this.UIMainWindowWindow.UIButtonButton;
            WinButton uIFecharButton = this.UIMainWindowWindow1.UIFecharButton;
            #endregion

            // Click 'Nova aba' button
            Mouse.Click(uINovaabaButton, new Point(8, 9));

            // Select 'www.uol.com.br/' in combo box
            uIItemComboBox.EditableItem = this.GravacaoDaTelaParams.UIItemComboBoxEditableItem;

            // Type '{Enter}' in 'Pesquisar ou abrir endereço' text box
            Keyboard.SendKeys(uIPesquisarouabrirendeEdit, this.GravacaoDaTelaParams.UIPesquisarouabrirendeEditSendKeys, ModifierKeys.None);

            // Select 'CheckBox' check box
            uICheckBoxCheckBox.Checked = this.GravacaoDaTelaParams.UICheckBoxCheckBoxChecked;

            // Click 'MainWindow' title bar
            Mouse.Click(uIMainWindowTitleBar, new Point(358, 14));

            // Click 'Button' button
            Mouse.Click(uIButtonButton, new Point(59, 18));

            // Double-Click 'Button' button
            Mouse.DoubleClick(uIButtonButton, new Point(49, 12));

            // Click 'Button' button
            Mouse.Click(uIButtonButton, new Point(49, 12));

            // Click 'Fechar' button
            Mouse.Click(uIFecharButton, new Point(41, 9));
        }
        
        #region Properties
        public virtual GravacaoDaTelaParams GravacaoDaTelaParams
        {
            get
            {
                if ((this.mGravacaoDaTelaParams == null))
                {
                    this.mGravacaoDaTelaParams = new GravacaoDaTelaParams();
                }
                return this.mGravacaoDaTelaParams;
            }
        }
        
        public UISmellstoRefactoringsWindow UISmellstoRefactoringsWindow
        {
            get
            {
                if ((this.mUISmellstoRefactoringsWindow == null))
                {
                    this.mUISmellstoRefactoringsWindow = new UISmellstoRefactoringsWindow();
                }
                return this.mUISmellstoRefactoringsWindow;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        
        public UIMainWindowWindow1 UIMainWindowWindow1
        {
            get
            {
                if ((this.mUIMainWindowWindow1 == null))
                {
                    this.mUIMainWindowWindow1 = new UIMainWindowWindow1();
                }
                return this.mUIMainWindowWindow1;
            }
        }
        #endregion
        
        #region Fields
        private GravacaoDaTelaParams mGravacaoDaTelaParams;
        
        private UISmellstoRefactoringsWindow mUISmellstoRefactoringsWindow;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        
        private UIMainWindowWindow1 mUIMainWindowWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'GravacaoDaTela'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class GravacaoDaTelaParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'www.uol.com.br/' in combo box
        /// </summary>
        public string UIItemComboBoxEditableItem = "www.terra.com.br";
        
        /// <summary>
        /// Type '{Enter}' in 'Pesquisar ou abrir endereço' text box
        /// </summary>
        public string UIPesquisarouabrirendeEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Select 'CheckBox' check box
        /// </summary>
        public bool UICheckBoxCheckBoxChecked = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UISmellstoRefactoringsWindow : WinWindow
    {
        
        public UISmellstoRefactoringsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Smells to Refactorings - smellstorefactorings.pdf - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Smells to Refactorings - smellstorefactorings.pdf - Mozilla Firefox");
            this.WindowTitles.Add("Nova aba - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIAbasdonavegadorToolBar UIAbasdonavegadorToolBar
        {
            get
            {
                if ((this.mUIAbasdonavegadorToolBar == null))
                {
                    this.mUIAbasdonavegadorToolBar = new UIAbasdonavegadorToolBar(this);
                }
                return this.mUIAbasdonavegadorToolBar;
            }
        }
        
        public UIBarradenavegaçãoToolBar UIBarradenavegaçãoToolBar
        {
            get
            {
                if ((this.mUIBarradenavegaçãoToolBar == null))
                {
                    this.mUIBarradenavegaçãoToolBar = new UIBarradenavegaçãoToolBar(this);
                }
                return this.mUIBarradenavegaçãoToolBar;
            }
        }
        
        public UIItemComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new UIItemComboBox(this);
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIAbasdonavegadorToolBar mUIAbasdonavegadorToolBar;
        
        private UIBarradenavegaçãoToolBar mUIBarradenavegaçãoToolBar;
        
        private UIItemComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIAbasdonavegadorToolBar : WinToolBar
    {
        
        public UIAbasdonavegadorToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Abas do navegador";
            this.WindowTitles.Add("Smells to Refactorings - smellstorefactorings.pdf - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinButton UINovaabaButton
        {
            get
            {
                if ((this.mUINovaabaButton == null))
                {
                    this.mUINovaabaButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINovaabaButton.SearchProperties[WinButton.PropertyNames.Name] = "Nova aba";
                    this.mUINovaabaButton.WindowTitles.Add("Smells to Refactorings - smellstorefactorings.pdf - Mozilla Firefox");
                    #endregion
                }
                return this.mUINovaabaButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINovaabaButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIBarradenavegaçãoToolBar : WinToolBar
    {
        
        public UIBarradenavegaçãoToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Barra de navegação";
            this.WindowTitles.Add("Nova aba - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Nova aba - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIItemComboBox : WinComboBox
    {
        
        public UIItemComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Nova aba - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIPesquisarouabrirendeEdit
        {
            get
            {
                if ((this.mUIPesquisarouabrirendeEdit == null))
                {
                    this.mUIPesquisarouabrirendeEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPesquisarouabrirendeEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Pesquisar ou abrir endereço";
                    this.mUIPesquisarouabrirendeEdit.WindowTitles.Add("Nova aba - Mozilla Firefox");
                    #endregion
                }
                return this.mUIPesquisarouabrirendeEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIPesquisarouabrirendeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox UICheckBoxCheckBox
        {
            get
            {
                if ((this.mUICheckBoxCheckBox == null))
                {
                    this.mUICheckBoxCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUICheckBoxCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "CheckBox";
                    this.mUICheckBoxCheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICheckBoxCheckBox;
            }
        }
        
        public WpfButton UIButtonButton
        {
            get
            {
                if ((this.mUIButtonButton == null))
                {
                    this.mUIButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIButtonButton.SearchProperties[WpfButton.PropertyNames.Name] = "Button";
                    this.mUIButtonButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mUICheckBoxCheckBox;
        
        private WpfButton mUIButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIMainWindowWindow1 : WinWindow
    {
        
        public UIMainWindowWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WinTitleBar UIMainWindowTitleBar
        {
            get
            {
                if ((this.mUIMainWindowTitleBar == null))
                {
                    this.mUIMainWindowTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUIMainWindowTitleBar.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIMainWindowTitleBar;
            }
        }
        
        public WinButton UIFecharButton
        {
            get
            {
                if ((this.mUIFecharButton == null))
                {
                    this.mUIFecharButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIFecharButton.SearchProperties[WinButton.PropertyNames.Name] = "Fechar";
                    this.mUIFecharButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIFecharButton;
            }
        }
        #endregion
        
        #region Fields
        private WinTitleBar mUIMainWindowTitleBar;
        
        private WinButton mUIFecharButton;
        #endregion
    }
}
